{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/usuario/Rene/Cursos/cursoreact/ReactJS/meetups/pages/index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Patines Sivar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch data from api\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://rene:raul1t012@cluster0.sg4w7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/usuario/Rene/Cursos/cursoreact/ReactJS/meetups/pages/index.js"],"names":["Fragment","Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACA,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADgB;AAE9BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFc;AAG9BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHgB;AAI9BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAepB,QAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n\nfunction HomePage(props) {\n  return (\n  <Fragment>\n    <title>Patines Sivar</title>\n    <MeetupList meetups={props.meetups} />\n  </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   //fetch data from api\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\nexport async function getStaticProps() {\n  //fetch data from an API\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://rene:raul1t012@cluster0.sg4w7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      })),\n    },\n    revalidate: 10,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}